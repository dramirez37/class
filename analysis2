"""Analysis Portion of Data Explorer: Demographics of the Low-Wage Workforce"""
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from matplotlib import ticker
import seaborn as sns

dtype = {"SEX": "category", "AGE": int, "YEAR": int, "HISPAN": "category", "PAIDHOUR": "category", "RACE": "category",
         "EARNWT": float, "EDUC": "category", "UHRSWORK1": int, "EARNWEEK": float, "HOURWAGE": float}
usecols = ["SEX", "AGE", "YEAR", "HISPAN", "PAIDHOUR", "RACE", "EARNWT", "EDUC", "UHRSWORK1", "EARNWEEK", "HOURWAGE"]
df = pd.read_csv("cps_00003.csv.gz", compression="gzip", usecols=usecols, dtype=dtype)

df = df.dropna(subset=['EARNWEEK', 'HOURWAGE', 'UHRSWORK1'])

df = df[
    (df['EARNWEEK'] > 0) & (df['EARNWEEK'] < 9999.99) &
    (df['HOURWAGE'] > 0) & (df['HOURWAGE'] < 99) &
    (df['UHRSWORK1'] > 0) & (df['UHRSWORK1'] < 997)
]

df['HOURLYWAGE'] = np.where(df['PAIDHOUR'] == 1, df['EARNWEEK'] / df['UHRSWORK1'], df['HOURWAGE'])

df['LOW_WAGE_WORKER'] = np.where(df['HOURLYWAGE'] <= 15, 1, 0)

df['HISPAN'] = pd.to_numeric(df['HISPAN'])
df['RECODED_RACE'] = np.select([
    (df['RACE'] == '100') & (df['HISPAN'] == 0),
    (df['RACE'] == '200') & (df['HISPAN'] == 0),
    (df['RACE'] == '651') & (df['HISPAN'] == 0),
    (df['HISPAN'] > 0),
    (df['RACE'] != '100') & (df['RACE'] != '200') & (df['RACE'] != '651') & (df['HISPAN'] == 0)
],
['Non-Hispanic White', 'Non-Hispanic Black', 'Non-Hispanic Asian', 'Hispanic', 'All Other'],
default='All Other')

df['RECODED_EDUC'] = np.select([
    df['EDUC'].astype(int) <= 60,
    ((df['EDUC'].astype(int) >= 70) & (df['EDUC'].astype(int) <= 73)),
    ((df['EDUC'].astype(int) >= 80) & (df['EDUC'].astype(int) <= 100)),
    df['EDUC'].astype(int) >= 110
],
['Less than High School', 'High School', 'Some College', 'College'])

race_grouped = df.groupby(['AGE', 'RECODED_RACE']).agg({
    'LOW_WAGE_WORKER': 'sum',
    'EARNWT': 'sum'
})
total_weighted_low_wage_workers = race_grouped.groupby('AGE')['LOW_WAGE_WORKER'].transform('sum')
race_grouped['LOW_WAGE_WORKER_FRACTION'] = (race_grouped['LOW_WAGE_WORKER'] / total_weighted_low_wage_workers) * 100
race_grouped = race_grouped.reset_index()
df_filtered = race_grouped[race_grouped['RECODED_RACE'] != 'All Other']

educ_grouped = df.groupby(['AGE', 'RECODED_EDUC'])[['LOW_WAGE_WORKER', 'EARNWT']].sum()
total_weighted_low_wage_workers_educ = educ_grouped.groupby('AGE')['LOW_WAGE_WORKER'].sum()
educ_grouped['LOW_WAGE_WORKER_FRACTION'] = (educ_grouped['LOW_WAGE_WORKER'] / total_weighted_low_wage_workers_educ) * 100
educ_grouped = educ_grouped.reset_index()

plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='AGE', y='LOW_WAGE_WORKER', hue='SEX', estimator='mean', errorbar=None)
plt.title('Fraction of Men and Women in Low-Wage Workforce by Age')
plt.xlabel('Age')
plt.ylabel('Fraction in Low-Wage Workforce (%)')
plt.legend(title="Sex", labels=["Men", "Women"], loc="upper right")
plt.gca().yaxis.set_major_formatter(ticker.PercentFormatter(xmax=1.0))
plt.show()

plt.figure(figsize=(10, 6))
sns.lineplot(data=df_filtered, x='AGE', y='LOW_WAGE_WORKER_FRACTION', hue='RECODED_RACE')
plt.title('Fraction of Workers in Low-Wage Workforce by Race and Age')
plt.xlabel('Age')
plt.ylabel('Fraction in Low-Wage Workforce (%)')
plt.gca().yaxis.set_major_formatter(ticker.PercentFormatter(xmax=100))
plt.legend(title="Race", loc="upper center")
plt.show()

plt.figure(figsize=(10, 6))
sns.lineplot(data=educ_grouped, x='AGE', y='LOW_WAGE_WORKER_FRACTION', hue='RECODED_EDUC')
plt.title('Fraction of Workers in Low-Wage Workforce by Education and Age')
plt.xlabel('Age')
plt.ylabel('Fraction in Low-Wage Workforce (%)')
plt.gca().yaxis.set_major_formatter(ticker.PercentFormatter(xmax=100))
plt.legend(title="Education", loc="upper left")
plt.show()